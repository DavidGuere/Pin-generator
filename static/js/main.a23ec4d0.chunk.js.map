{"version":3,"sources":["components/util/numberGenerators/GeneratePinAsInteger.js","components/util/numberValidators/PinWasGeneratedValidator.js","components/util/numberValidators/PinIsTooSimpleValidator.js","components/model/SaveToLocalStorage.js","components/model/GetDataFromLocalStorage.js","components/view/UsersListPlaceholder.js","components/view/View.js","components/controller/Controller.js","App.js","reportWebVitals.js","index.js"],"names":["generatePinAsInteger","numberToString","i","randNumber","Math","floor","random","toString","parseInt","pinWasGeneratedValidator","pinToValidate","window","localStorage","getItem","length","substring","pinIsTooSimpleValidator","pin","pinDigits","split","saveToLocalStorage","username","setItem","nextKey","getDataFromLocalStorage","result","UsersListPlaceholder","data","className","map","index","View","prop","newPin","generatePinFunc","usernameRef","showListOfUsersFunc","listOfUsers","setToggleUsersList","toggleUsersList","viewBox","fill","d","type","placeholder","ref","onClick","Controller","useState","setNewPin","didPageMount","useRef","setListOfUsers","pinGenerator","useEffect","current","value","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a23ec4d0.chunk.js","sourcesContent":["/**\r\n * Generates a random integer of 4 digits\r\n * @returns {number} Returns a 4 digits integer\r\n */\r\nfunction generatePinAsInteger() {\r\n  var numberToString = \"\";\r\n\r\n  for (let i = 0; i < 4; i++) {\r\n    var randNumber = Math.floor(Math.random() * 10);\r\n\r\n    while (randNumber === 0 && i === 0) {\r\n      randNumber = Math.floor(Math.random() * 10);\r\n    }\r\n    numberToString = numberToString + randNumber.toString();\r\n  }\r\n\r\n  var stringToNumber = parseInt(numberToString);\r\n\r\n  return stringToNumber;\r\n}\r\n\r\nexport default generatePinAsInteger;\r\n","/**\r\n * Check if a 4 digit number is already in the localStorage of your browser.\r\n * @param {number} pinToValidate The PIN number to search for in the localStorage.\r\n * @returns {Boolean} Returns false if the localStorage is empty or the PIN number was not found in the localStorage.\r\n * Returns true if the PIN number was found in the localStorage of your browser.\r\n */\r\nfunction pinWasGeneratedValidator(pinToValidate) {\r\n  var firstKey = window.localStorage.getItem(1);\r\n\r\n  if (firstKey === null) return false;\r\n  if (window.localStorage.getItem(8999) !== null) return false;\r\n\r\n  for (let i = 1; i <= window.localStorage.length; i++) {\r\n    var pin = parseInt(window.localStorage.getItem(i).substring(0, 4));\r\n\r\n    if (pin === pinToValidate) return true;\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\nexport default pinWasGeneratedValidator;\r\n","/**\r\n * Check wether a 4 digit number is comprised of the same digits.\r\n * @returns {Boolean} Returns true if the number is too simple (all the 4 digits are the same), otherwise returns false.\r\n */\r\nfunction pinIsTooSimpleValidator(pin) {\r\n  var pinDigits = pin.toString().split(\"\");\r\n\r\n  if (\r\n    pinDigits[0] === pinDigits[1] &&\r\n    pinDigits[0] === pinDigits[2] &&\r\n    pinDigits[0] === pinDigits[3]\r\n  )\r\n    return true;\r\n  return false;\r\n}\r\n\r\nexport default pinIsTooSimpleValidator;\r\n","/**\r\n *Saves the input parameter to the localStorage of your browser\r\n *\r\n * @param {number} pin The PIN of the user\r\n * @param {string} username The name of the user\r\n */\r\nfunction saveToLocalStorage(pin, username) {\r\n  var firstKey = window.localStorage.getItem(1);\r\n  if (firstKey === null) {\r\n    window.localStorage.setItem(1, pin + username);\r\n  } else {\r\n    var nextKey = localStorage.length + 1;\r\n    window.localStorage.setItem(nextKey, pin + username);\r\n  }\r\n}\r\n\r\nexport default saveToLocalStorage;\r\n","/**\r\n * Retrieves the data from the localStorage of your browser.\r\n *\r\n * @returns {array} Returns a two dimensional array containing the pins and the usernames\r\n */\r\nfunction getDataFromLocalStorage() {\r\n  var result = [[], []];\r\n\r\n  for (let i = 1; i <= window.localStorage.length; i++) {\r\n    let pin = parseInt(window.localStorage.getItem(i).substring(0, 4));\r\n    let username = window.localStorage.getItem(i).substring(4);\r\n\r\n    result[0][i - 1] = pin;\r\n    result[1][i - 1] = username;\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\nexport default getDataFromLocalStorage;\r\n","import React from \"react\";\r\n\r\nfunction UsersListPlaceholder({ data }) {\r\n  return (\r\n    <>\r\n      <div className=\"userData\">\r\n        <div>\r\n          {data[0].map((pin, index) => {\r\n            if (data[1][index] === \"\") {\r\n              data[1][index] = \"Username was not given\";\r\n            }\r\n            return (\r\n              <div key={index}>\r\n                Username: {data[1][index]}, PIN: {pin}\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default UsersListPlaceholder;\r\n","import React from \"react\";\r\nimport \"./View.css\";\r\nimport UsersListPlaceholder from \"./UsersListPlaceholder\";\r\n\r\nfunction View(prop) {\r\n  const {\r\n    newPin,\r\n    generatePinFunc,\r\n    usernameRef,\r\n    showListOfUsersFunc,\r\n    listOfUsers,\r\n    setToggleUsersList,\r\n    toggleUsersList,\r\n  } = prop;\r\n\r\n  return (\r\n    <>\r\n      <div className=\"pinGeneratorContainer\">\r\n        <div className=\"logo\"></div>\r\n        <div className=\"title\">Lloyd's Register PIN generator</div>\r\n        <div className=\"explanation\">\r\n          Enter a username and press \"Generate PIN\" to generate a PIN for the\r\n          user\r\n        </div>\r\n        <div className=\"inputFields\">\r\n          <div className=\"username\">\r\n            <svg className=\"svg-icon\" viewBox=\"0 0 20 20\">\r\n              <path\r\n                fill=\"#555\"\r\n                d=\"M12.443,9.672c0.203-0.496,0.329-1.052,0.329-1.652c0-1.969-1.241-3.565-2.772-3.565S7.228,6.051,7.228,8.02c0,0.599,0.126,1.156,0.33,1.652c-1.379,0.555-2.31,1.553-2.31,2.704c0,1.75,2.128,3.169,4.753,3.169c2.624,0,4.753-1.419,4.753-3.169C14.753,11.225,13.821,10.227,12.443,9.672z M10,5.247c1.094,0,1.98,1.242,1.98,2.773c0,1.531-0.887,2.772-1.98,2.772S8.02,9.551,8.02,8.02C8.02,6.489,8.906,5.247,10,5.247z M10,14.753c-2.187,0-3.96-1.063-3.96-2.377c0-0.854,0.757-1.596,1.885-2.015c0.508,0.745,1.245,1.224,2.076,1.224s1.567-0.479,2.076-1.224c1.127,0.418,1.885,1.162,1.885,2.015C13.961,13.689,12.188,14.753,10,14.753z M10,0.891c-5.031,0-9.109,4.079-9.109,9.109c0,5.031,4.079,9.109,9.109,9.109c5.031,0,9.109-4.078,9.109-9.109C19.109,4.969,15.031,0.891,10,0.891z M10,18.317c-4.593,0-8.317-3.725-8.317-8.317c0-4.593,3.724-8.317,8.317-8.317c4.593,0,8.317,3.724,8.317,8.317C18.317,14.593,14.593,18.317,10,18.317z\"\r\n              ></path>\r\n            </svg>\r\n            <input\r\n              type=\"username\"\r\n              className=\"userInput\"\r\n              placeholder=\"Username\"\r\n              ref={usernameRef}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"pin\">The new PIN is: {newPin}</div>\r\n        <button className=\"button\" onClick={() => generatePinFunc()}>\r\n          Generate PIN\r\n        </button>\r\n        <button\r\n          className=\"button\"\r\n          onClick={() => {\r\n            setToggleUsersList(!toggleUsersList);\r\n            showListOfUsersFunc();\r\n          }}\r\n        >\r\n          Show/Hide list of users\r\n        </button>\r\n        {toggleUsersList ? <UsersListPlaceholder data={listOfUsers} /> : null}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default View;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport generatePinAsInteger from \"../util/numberGenerators/GeneratePinAsInteger\";\r\nimport pinWasGeneratedValidator from \"../util/numberValidators/PinWasGeneratedValidator\";\r\nimport pinIsTooSimpleValidator from \"../util/numberValidators/PinIsTooSimpleValidator\";\r\nimport saveToLocalStorage from \"../model/SaveToLocalStorage\";\r\nimport getDataFromLocalStorage from \"../model/GetDataFromLocalStorage\";\r\nimport View from \"../view/View\";\r\n\r\nfunction Controller() {\r\n  const [newPin, setNewPin] = useState();\r\n  const didPageMount = useRef(false);\r\n  const usernameRef = useRef(\"\");\r\n  const [listOfUsers, setListOfUsers] = useState([[], []]);\r\n  const [toggleUsersList, setToggleUsersList] = useState(false);\r\n\r\n  // Select the type of PIN generator\r\n  const pinGenerator = generatePinAsInteger;\r\n\r\n  function generatePin() {\r\n    let pin = pinGenerator();\r\n\r\n    while (pinIsTooSimpleValidator(pin) || pinWasGeneratedValidator(pin)) {\r\n      pin = pinGenerator;\r\n    }\r\n\r\n    setNewPin(pin);\r\n  }\r\n\r\n  function showListOfUsers() {\r\n    setListOfUsers(getDataFromLocalStorage());\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (didPageMount.current) {\r\n      saveToLocalStorage(newPin, usernameRef.current.value);\r\n    }\r\n  }, [newPin]);\r\n\r\n  useEffect(() => {\r\n    didPageMount.current = true;\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <View\r\n        newPin={newPin}\r\n        generatePinFunc={generatePin}\r\n        usernameRef={usernameRef}\r\n        showListOfUsersFunc={showListOfUsers}\r\n        listOfUsers={listOfUsers}\r\n        setToggleUsersList={setToggleUsersList}\r\n        toggleUsersList={toggleUsersList}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Controller;\r\n","import Controller from \"./components/controller/Controller\";\n\nfunction App() {\n  return (\n    <>\n      <Controller />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}